@model WebPubApp.Publication

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Publication</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.PMID)

        <div class="form-group">
            @Html.LabelFor(model => model.ISSN, "Journal", htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-xs-10">
                @Html.DropDownList("ISSN", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.ISSN, "", new { @class = "text-danger" })
                @Html.ActionLink(linkText: "Edit journals list", actionName: "Index", controllerName: "Journals", routeValues: new { id = Model.PMID }, htmlAttributes: null)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeID, "Article type", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("TypeID", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.TypeID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control", @width = "200" } })
                @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Volume, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Volume, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Volume, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Issue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Issue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Issue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Pages, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Pages, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Pages, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Year, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Link, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Link, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Link, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Free, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.Free)
                    @Html.ValidationMessageFor(model => model.Free, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Abstract, htmlAttributes: new { @class = "control-label col-xs-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Abstract, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Abstract, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Keywords, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @{
                    string keywords = "";
                    foreach (Keyword key in Model.Keywords)
                    {
                        keywords += key.Word.TrimEnd(' ') + ", ";
                    }
                    @keywords.TrimEnd(',', ' ')
                }
                @Html.ActionLink(linkText: "Edit keywords list", actionName: "DisplayKeywords", routeValues: new { pmid = Model.PMID })
            </div>            
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>
        </div>

    @Html.ActionLink(
    linkText: "Create new",
    actionName: "Create",
    controllerName: "Authorships",
    routeValues: new {id = Model.PMID},
    htmlAttributes: null)

    <table class="table">
        <tr>
            <th>
                Position
            </th>
            <th>
                First name
            </th>
            <th>
                Second name
            </th>
            <th>
                Organization branch
            </th>
            <th>
                Country
            </th>
            <th>
                Organization
            </th>
            <th></th>
        </tr>

        @foreach (Authorship item in Model.Authorships.OrderBy(x => x.Position))
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Position)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Person.SecondName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrgBranch.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrgBranch.Country.Name)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.OrgBranch.Organization.Title)
                </td>
                <td>
                    @Html.ActionLink(linkText: "Delete", actionName: "Delete", controllerName: "Authorships", routeValues: new { personId = item.PersonID, pmid = item.PMID, branchId = item.BranchID },
        htmlAttributes: null)
                </td>
            </tr>
        }

    </table>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
